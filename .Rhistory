addMarkers(~`Long.`, ~`Lat.`, popup = ~ `Watershed/Monitoring Site Location`)
leaflet(data = data1)%>%
addTiles() %>%
addMarkers(~`Long.`, ~`Lat.`, popup = ~ `Watershed/Monitoring Site Location`) %>%
addPolylines(data = data2[1:6,], lng = ~ `Long.`, lat = ~ `Lat.`)
leaflet(data = data1)%>%
addTiles() %>%
addMarkers(~`Long.`, ~`Lat.`, popup = ~ `Watershed/Monitoring Site Location`) %>%
addPolylines(data = data2[1:10,], lng = ~ `Long.`, lat = ~ `Lat.`) %>%
addCircles(lng = ~`Long.`, lat = ~`Lat.`, weight = 1,
radius = ~`Total Suspended Solid (TSS)` * 250, popup = ~`Watershed/Monitoring Site Location`)
runApp()
runApp()
summary(data1$`Total Suspended Solid (TSS)`)
runApp()
getColor <- function(threshold) {
sapply(data1$`Total Suspended Solid (TSS)`, function(`Total Suspended Solid (TSS)`) {
if(`Total Suspended Solid (TSS)` <= 100) {
"green"
} else if(`Total Suspended Solid (TSS)` > 100 & `Total Suspended Solid (TSS)` <= 175) {
"orange"
} else {
"red"
} })
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = getColor(data1)
)
leaflet(data1) %>% addTiles() %>%
addAwesomeMarkers(~`Long.`, ~`Lat.`, icon=icons, label=~as.character(`Total Suspended Solid (TSS)`)) %>%
addPolylines(data = data2[1:10,], lng = ~ `Long.`, lat = ~ `Lat.`)
runApp('D:/Competitions/MUDAC 2019/leaflet')
getwd()
runApp('D:/Competitions/MUDAC 2019/leaflet')
setwd("D:/Competitions/MUDAC 2019/leaflet")
runApp()
runApp()
runApp()
runApp()
runApp()
pal <- colorNumeric(
palette = "RdYlBu",
domain = data1$`Total Suspended Solid (TSS)`
)
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = pal(data1)
)
leaflet(data1) %>% addTiles() %>%
addAwesomeMarkers(~`Long.`, ~`Lat.`, icon=icons, label=~as.character(`Total Suspended Solid (TSS)`)) %>%
addPolylines(data = data2[1:10,], lng = ~ `Long.`, lat = ~ `Lat.`) %>%
addLegend(position = "bottomright", pal = pal(`Total Suspended Solid (TSS)`))
leaflet(data1) %>% addTiles() %>%
addAwesomeMarkers(~`Long.`, ~`Lat.`, icon=icons, label=~as.character(`Total Suspended Solid (TSS)`)) %>%
addPolylines(data = data2[1:10,], lng = ~ `Long.`, lat = ~ `Lat.`) %>%
addLegend(position = "bottomright", pal = pal(`Total Suspended Solid (TSS)`), values = c(0,50,100,150,200,250))
leaflet(data1) %>% addTiles() %>%
addAwesomeMarkers(~`Long.`, ~`Lat.`, icon=icons, label=~as.character(`Total Suspended Solid (TSS)`)) %>%
addPolylines(data = data2[1:10,], lng = ~ `Long.`, lat = ~ `Lat.`) %>%
addLegend(position = "bottomright", pal = pal(data1$`Total Suspended Solid (TSS)`), values = c(0,50,100,150,200,250))
leaflet(data1) %>% addTiles() %>%
addAwesomeMarkers(~`Long.`, ~`Lat.`, icon=icons, label=~as.character(`Total Suspended Solid (TSS)`)) %>%
addPolylines(data = data2[1:10,], lng = ~ `Long.`, lat = ~ `Lat.`) %>%
addLegend(position = "bottomright", pal = pal, values = c(0,50,100,150,200,250))
pal <- colorNumeric(
palette = "Greens",
domain = data1$`Total Suspended Solid (TSS)`
)
leaflet(data1) %>% addTiles() %>%
addAwesomeMarkers(~`Long.`, ~`Lat.`, icon=icons, label=~as.character(`Total Suspended Solid (TSS)`)) %>%
addPolylines(data = data2[1:10,], lng = ~ `Long.`, lat = ~ `Lat.`) %>%
addLegend(position = "bottomright", pal = pal, values = c(0,50,100,150,200,250))
pal <- colorNumeric(c("red", "yellow", "blue","orange","green")
)
pal <- colorNumeric(c("red", "yellow", "blue","orange","green"),1:5)
pal
leaflet(data1) %>% addTiles() %>%
addAwesomeMarkers(~`Long.`, ~`Lat.`, icon=icons, label=~as.character(`Total Suspended Solid (TSS)`)) %>%
addPolylines(data = data2[1:10,], lng = ~ `Long.`, lat = ~ `Lat.`) %>%
addLegend(position = "bottomright", pal = pal, values = c(0,50,100,150,200,250))
pal <- colorNumeric(c("red", "yellow", "blue","orange","green"),1:50)
leaflet(data1) %>% addTiles() %>%
addAwesomeMarkers(~`Long.`, ~`Lat.`, icon=icons, label=~as.character(`Total Suspended Solid (TSS)`)) %>%
addPolylines(data = data2[1:10,], lng = ~ `Long.`, lat = ~ `Lat.`) %>%
addLegend(position = "bottomright", pal = pal, values = c(0,50,100,150,200,250))
pal <- colorNumeric(c("red", "yellow", "blue","orange","green"),1:500)
leaflet(data1) %>% addTiles() %>%
addAwesomeMarkers(~`Long.`, ~`Lat.`, icon=icons, label=~as.character(`Total Suspended Solid (TSS)`)) %>%
addPolylines(data = data2[1:10,], lng = ~ `Long.`, lat = ~ `Lat.`) %>%
addLegend(position = "bottomright", pal = pal, values = c(0,50,100,150,200,250))
pal <- colorNumeric(c("red", "yellow", "blue","orange","green"))
pal <- colorNumeric(c("red", "yellow", "blue","orange","green"), seq(0,1,by=0.01))
leaflet(data1) %>% addTiles() %>%
addAwesomeMarkers(~`Long.`, ~`Lat.`, icon=icons, label=~as.character(`Total Suspended Solid (TSS)`)) %>%
addPolylines(data = data2[1:10,], lng = ~ `Long.`, lat = ~ `Lat.`) %>%
addLegend(position = "bottomright", pal = pal, values = c(0,50,100,150,200,250))
pal(c(1,6,9))
pal(c(0.11,0.6,0.9))
pal <- colorNumeric(c("red", "yellow", "blue","orange","green"), 0:255)
leaflet(data1) %>% addTiles() %>%
addAwesomeMarkers(~`Long.`, ~`Lat.`, icon=icons, label=~as.character(`Total Suspended Solid (TSS)`)) %>%
addPolylines(data = data2[1:10,], lng = ~ `Long.`, lat = ~ `Lat.`) %>%
addLegend(position = "bottomright", pal = pal, values = c(0,50,100,150,200,250))
pal <- colorNumeric(c("red", "orange","green"), 0:255)
leaflet(data1) %>% addTiles() %>%
addAwesomeMarkers(~`Long.`, ~`Lat.`, icon=icons, label=~as.character(`Total Suspended Solid (TSS)`)) %>%
addPolylines(data = data2[1:10,], lng = ~ `Long.`, lat = ~ `Lat.`) %>%
addLegend(position = "bottomright", pal = pal, values = c(0,50,100,150,200,250))
leaflet(data1) %>% addTiles() %>%
addAwesomeMarkers(~`Long.`, ~`Lat.`, icon=icons, label=~as.character(`Total Suspended Solid (TSS)`)) %>%
addPolylines(data = data2[1:10,], lng = ~ `Long.`, lat = ~ `Lat.`) %>%
addLegend(position = "bottomright", pal = pal, values = c(0,50,150,250))
leaflet(data1) %>% addTiles() %>%
addAwesomeMarkers(~`Long.`, ~`Lat.`, icon=icons, label=~as.character(`Total Suspended Solid (TSS)`)) %>%
addPolylines(data = data2[1:10,], lng = ~ `Long.`, lat = ~ `Lat.`) %>%
addLegend(position = "bottomright", pal = pal, values = c(0,50,250))
getColor <- function(threshold) {
if(`Total Suspended Solid (TSS)` <= 50) {
"green"
} else if(`Total Suspended Solid (TSS)` > 50 & `Total Suspended Solid (TSS)` <= 125) {
"orange"
} else if(`Total Suspended Solid (TSS)` > 125 & `Total Suspended Solid (TSS)` <= 200){
}  "yellow" {
} else {
"red"
})
getColor <- function(threshold) {
if(`Total Suspended Solid (TSS)` <= 50) {
"green"
} else if(`Total Suspended Solid (TSS)` > 50 & `Total Suspended Solid (TSS)` <= 125) {
"orange"
} else if(`Total Suspended Solid (TSS)` > 125 & `Total Suspended Solid (TSS)` <= 200){
"yellow"
} else {
"red"
})
getColor <- function(threshold) {
sapply(data1$`Total Suspended Solid (TSS)`, function(`Total Suspended Solid (TSS)`) {
if(`Total Suspended Solid (TSS)` <= 50) {
"green"
} else if(`Total Suspended Solid (TSS)` > 50 & `Total Suspended Solid (TSS)` <= 125) {
"orange"
} else if(`Total Suspended Solid (TSS)` > 125 & `Total Suspended Solid (TSS)` <= 200) {
"yellow"
} else "red"
)
}
}
getColor <- function(threshold) {
sapply(data1$`Total Suspended Solid (TSS)`, function(`Total Suspended Solid (TSS)`) {
if(`Total Suspended Solid (TSS)` <= 50) {
"green"
} else if(`Total Suspended Solid (TSS)` > 50 & `Total Suspended Solid (TSS)` <= 125) {
"orange"
} else if(`Total Suspended Solid (TSS)` > 125 & `Total Suspended Solid (TSS)` <= 200) {
"yellow"
} else {"red"}
)
}
}
getColor <- function(threshold) {
sapply(data1$`Total Suspended Solid (TSS)`, function(`Total Suspended Solid (TSS)`) {
if(`Total Suspended Solid (TSS)` <= 50) {
"green"
} else if(`Total Suspended Solid (TSS)` > 50 & `Total Suspended Solid (TSS)` <= 125) {
"orange"
} else if(`Total Suspended Solid (TSS)` > 125 & `Total Suspended Solid (TSS)` <= 200) {
"yellow"
} else {
"red"
}
)
}
}
getColor <- function(threshold) {
sapply(data1$`Total Suspended Solid (TSS)`, function(`Total Suspended Solid (TSS)`) {
if(`Total Suspended Solid (TSS)` <= 50) {
"green"
} else if(`Total Suspended Solid (TSS)` > 50 & `Total Suspended Solid (TSS)` <= 125) {
"orange"
} else if(`Total Suspended Solid (TSS)` > 125 & `Total Suspended Solid (TSS)` <= 200) {
"yellow"
} else {
"red"
}
}
)
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = pal(data1)
)
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = pal(data1$`Total Suspended Solid (TSS)`)
)
pal <- colorNumeric(c("green",  "orange", "yellow", "red"), 0:255)
leaflet(data1) %>% addTiles() %>%
addAwesomeMarkers(~`Long.`, ~`Lat.`, icon=icons, label=~as.character(`Total Suspended Solid (TSS)`)) %>%
addPolylines(data = data2[1:10,], lng = ~ `Long.`, lat = ~ `Lat.`) %>%
addLegend(position = "bottomright", pal = pal, values = c(0,50,125,200,250))
getColor <- function(threshold) {
sapply(data1$`Total Suspended Solid (TSS)`, function(`Total Suspended Solid (TSS)`) {
if(`Total Suspended Solid (TSS)` <= 50) {
"green"
} else if(`Total Suspended Solid (TSS)` > 50 & `Total Suspended Solid (TSS)` <= 125) {
"orange"
} else if(`Total Suspended Solid (TSS)` > 125 & `Total Suspended Solid (TSS)` <= 200) {
"yellow"
} else {
"red"
} })
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = pal(data1)
)
getColor <- function(threshold) {
sapply(data1$`Total Suspended Solid (TSS)`, function(`Total Suspended Solid (TSS)`) {
if(`Total Suspended Solid (TSS)` <= 50) {
"green"
} else if(`Total Suspended Solid (TSS)` > 50 & `Total Suspended Solid (TSS)` <= 175) {
"orange"
} else {
"red"
} })
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = pal(data1)
)
getColor <- function(threshold) {
sapply(data1$`Total Suspended Solid (TSS)`, function(`Total Suspended Solid (TSS)`) {
if(`Total Suspended Solid (TSS)` <= 100) {
"green"
} else if(`Total Suspended Solid (TSS)` > 100 & `Total Suspended Solid (TSS)` <= 175) {
"orange"
} else {
"red"
} })
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = getColor(data1)
)
getColor <- function(threshold) {
sapply(data1$`Total Suspended Solid (TSS)`, function(`Total Suspended Solid (TSS)`) {
if(`Total Suspended Solid (TSS)` <= 75) {
"green"
} else if(`Total Suspended Solid (TSS)` > 75 & `Total Suspended Solid (TSS)` <= 175) {
"orange"
} else {
"red"
} })
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = getColor(data1)
)
pal <- colorNumeric(c("green",  "orange", "red"), 0:255)
leaflet(data1) %>% addTiles() %>%
addAwesomeMarkers(~`Long.`, ~`Lat.`, icon=icons, label=~as.character(`Total Suspended Solid (TSS)`)) %>%
addPolylines(data = data2[1:10,], lng = ~ `Long.`, lat = ~ `Lat.`) %>%
addLegend(position = "bottomright", pal = pal, values = c(0,75,175,250))
runApp()
map("rivers", add = TRUE, col = "blue")
require(mapdata)
map('world', interior=F,col="darkgray")
map('rivers', add=TRUE, col="blue")
?map
require(mapdata)
map('state', interior=F,col="darkgray")
map('rivers', add=TRUE, col="blue")
s = map('state', interior=F,col="darkgray")
s
View(s)
s = map('state', interior=F,col="darkgray")
r = map('rivers', add=TRUE, col="blue")
r
#===============
# LOAD PACKAGES
#===============
library(tidyverse)
library(maptools)
#DEFINE URL
# - this is the location of the file
url.river_data <- url("https://vrzkj25a871bpq7t1ugcgmn9-wpengine.netdna-ssl.com/wp-content/datasets/usa_rivers.RData")
# LOAD DATA
# - this will retrieve the data from the URL
load(url.river_data)
# INSPECT
summary(lines.rivers)
lines.rivers@data %>% glimpse()
levels(lines.rivers$FEATURE)
table(lines.rivers$FEATURE)
#==============================================
# REMOVE MISC FEATURES
# - there are some features in the data that we
#   want to remove
#==============================================
lines.rivers <- subset(lines.rivers, !(FEATURE %in% c("Shoreline"
,"Shoreline Intermittent"
,"Null"
,"Closure Line"
,"Apparent Limit"
)))
# RE-INSPECT
table(lines.rivers$FEATURE)
#-------------------------------
# IDENTIFY STATES
# - we need to find out
#   which states are in the data
#-------------------------------
table(lines.rivers$STATE)
lines.rivers <- subset(lines.rivers, (STATE %in% 'MN')
)
lines.rivers
# RE-INSPECT
table(lines.rivers$STATE)
lines.rivers <- subset(lines.rivers, (STATE %in% c('MN','MN-WI','MN-ND','MN-SD'))
)
# RE-INSPECT
table(lines.rivers$STATE)
df.usa_rivers <- fortify(lines.rivers)
map.usa_states <- map_data("state")
View(df.usa_rivers)
#============
# GET USA MAP
#============
map.usa_country <- map_data("usa")
map.usa_states <- map_data("state")
ggplot() +
geom_polygon(data = map.usa_country, aes(x = long, y = lat, group = group), fill = "#484848") +
geom_path(data = df.usa_rivers, aes(x = long, y = lat, group = group), color = "#8ca7c0", size = .08) +
coord_map(projection = "albers", lat0 = 30, lat1 = 40, xlim = c(-121,-73), ylim = c(25,51)) +
labs(title = "Rivers and waterways of the United States") +
annotate("text", label = "www.sharpsightlabs.com", family = "Gill Sans", color = "#A1A1A1"
, x = -89, y = 26.5, size = 5) +
theme(panel.background = element_rect(fill = "#292929")
,plot.background = element_rect(fill = "#292929")
,panel.grid = element_blank()
,axis.title = element_blank()
,axis.text = element_blank()
,axis.ticks = element_blank()
,text = element_text(family = "Gill Sans", color = "#A1A1A1")
,plot.title = element_text(size = 34)
)
ggplot() +
geom_polygon(data = map.usa_country, aes(x = long, y = lat, group = group), fill = "#484848") +
geom_path(data = df.usa_rivers, aes(x = long, y = lat, group = group), color = "#8ca7c0", size = .08) +
coord_map(projection = "albers", lat0 = 30, lat1 = 40, xlim = c(-121,-73), ylim = c(25,51))
ggplot() +
geom_polygon(data = map.usa_country, aes(x = long, y = lat), fill = "#484848") +
geom_path(data = df.usa_rivers, aes(x = long, y = lat), color = "#8ca7c0", size = .08) +
coord_map(projection = "albers", lat0 = 30, lat1 = 40, xlim = c(-121,-73), ylim = c(25,51))
ggplot() +
mn_base +
geom_path(data = df.usa_rivers, aes(x = long, y = lat), color = "#8ca7c0", size = .08)
mn_base +
geom_path(data = df.usa_rivers, aes(x = long, y = lat), color = "#8ca7c0", size = .08)
mn_base +
geom_path(data = df.usa_rivers, aes(x = long, y = lat), color = "blue", size = .08)
ggplot(data = mn, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = "gray") +
geom_polygon(data = mn_county, fill = NA, color = "white") +
geom_polygon(color = "black", fill = NA) +
geom_path(data = df.usa_rivers, aes(x = long, y = lat), color = "blue", size = .08)
#=======
# PLOT
#=======
dev.off()
mn_base +
geom_path(data = df.usa_rivers, aes(x = long, y = lat), color = "blue", size = .08)
ggplot(data = mn, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = "gray") +
geom_polygon(color = "black", fill = NA) +
geom_point(data = data1, aes(x = Long , y = Lat, colour = `Total Suspended Solid (TSS)`), inherit.aes = F, size = 4) +
scale_colour_gradientn(colours = terrain.colors(10)) +
geom_path(data = df.usa_rivers, aes(x = long, y = lat), color = "lightblue", size = .08)
ggplot(data = mn, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = "gray") +
geom_polygon(color = "black", fill = NA) +
geom_point(data = data1, aes(x = `Long.` , y = `Lat.`, colour = `Total Suspended Solid (TSS)`), inherit.aes = F, size = 4) +
scale_colour_gradientn(colours = terrain.colors(10)) +
geom_path(data = df.usa_rivers, aes(x = long, y = lat), color = "lightblue", size = .08)
ggplot(data = mn, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = "gray") +
geom_polygon(color = "black", fill = NA) +
geom_point(data = data1, aes(x = `Long.` , y = `Lat.`, colour = `Total Suspended Solid (TSS)`), inherit.aes = F, size = 3) +
scale_colour_gradientn(colours = terrain.colors(10)) +
geom_path(data = df.usa_rivers, aes(x = long, y = lat), color = "lightblue", size = .05)
ggplot(data = mn, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = "gray") +
geom_polygon(color = "black", fill = NA) +
geom_point(data = data1, aes(x = `Long.` , y = `Lat.`, colour = `Total Suspended Solid (TSS)`), inherit.aes = F, size = 3) +
scale_colour_gradientn(colours = rainbow(7)) +
geom_path(data = df.usa_rivers, aes(x = long, y = lat), color = "lightblue", size = .05)
ggplot(data = mn, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = "gray") +
geom_polygon(color = "black", fill = NA) +
geom_point(data = data1, aes(x = `Long.` , y = `Lat.`, colour = `Total Suspended Solid (TSS)`), inherit.aes = F, size = 3) +
scale_colour_gradientn(colours = topo.colors(10)) +
geom_path(data = df.usa_rivers, aes(x = long, y = lat), color = "lightblue", size = .05)
df <- data.frame(Groupe = rep(c("A","B"),4),
Period = gl(4,2,8,c("t0","t1","t2","t3","t4")),
rate = c(0.83,0.96,0.75,0.93,0.67,0.82,0.65,0.73))
df$Period %in% c("t2","t3","t4")
df$Period %in% c("t2","t3","t4") + 1L
runApp()
data2
View(data2)
library(riverdist)
install.packages("riverdist")
library(riverdist)
library(igraph)
lc = layout.circle(data1[,c(19,20)])
mn_base +
geom_density2d(data = data1, aes(x = `Lon.`, y = `Lat.`), size = 0.3) +
stat_density2d(data = data1,
aes(x = lon, y = lat, fill = ..level.., alpha = ..level..), size = 0.01,
bins = 16, geom = "polygon") + scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.3), guide = FALSE)
runApp()
library(ggmap)
minn_map=get_map(location="minnesota",zoom=6.5)
minn_map
tartu_map_g_str = minn_map
ws_coords = data.frame(long=data1$Long.,lat=data1$Lat.,labels=labels,group=25,h_labels=labels2)
tartu_housing = ws_coords
ggmap(tartu_map_g_str, extent = "device") + geom_density2d(data = tartu_housing, aes(x = long, y = lat), size = 0.3) +
stat_density2d(data = tartu_housing,
aes(x = long, y = lat, fill = ..level.., alpha = ..level..), size = 0.01,
bins = 16, geom = "polygon") + scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.3), guide = FALSE)
mn_base +
library(ggmap)
library(ggmap)
minn_map=get_map(location="minnesota",zoom=6.5)
minn_map=get_map(location="minnesota",zoom = 6)
mn_base + geom_density2d(data = tartu_housing, aes(x = long, y = lat), size = 0.3) +
stat_density2d(data = tartu_housing,
aes(x = long, y = lat, fill = ..level.., alpha = ..level..), size = 0.01,
bins = 16, geom = "polygon") + scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.3), guide = FALSE)
mn_base + geom_density2d(data = tartu_housing, aes(x = long, y = lat), size = 0.3) +
stat_density2d(data = data1,
aes(x = long, y = lat, fill = ..level.., alpha = ..level..), size = 0.01,
bins = 16, geom = "polygon") + scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.3), guide = FALSE)
mn_base + geom_density2d(data = data1, aes(x = long, y = lat), size = 0.3) +
stat_density2d(data = data1,
aes(x = long, y = lat, fill = ..level.., alpha = ..level..), size = 0.01,
bins = 16, geom = "polygon") + scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.3), guide = FALSE)
runApp()
shiny::runApp()
runApp()
library(maps)
library(ggmap)
library(mapdata)
mn_base <- ggplot(data = mn, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = "gray") +
geom_polygon(color = "black", fill = NA) +
geom_point(data = data1, aes(x = `Long.` , y = `Lat.`, colour = `Total Suspended Solid (TSS)`), inherit.aes = F, size = 3) +
scale_colour_gradientn(colours = topo.colors(10)) +
geom_path(data = df.usa_rivers, aes(x = long, y = lat), color = "lightblue", size = .05)
colnames(data2)[20] = "Long"
states = map_data("state")
mn = subset(states, region == "minnesota")
counties = map_data("county")
mn_county = subset(counties, region == "minnesota")
mn_base <- ggplot(data = mn, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = "gray") +
geom_polygon(color = "black", fill = NA) +
geom_point(data = data1, aes(x = `Long.` , y = `Lat.`, colour = `Total Suspended Solid (TSS)`), inherit.aes = F, size = 3) +
scale_colour_gradientn(colours = topo.colors(10)) +
geom_path(data = df.usa_rivers, aes(x = long, y = lat), color = "lightblue", size = .05)
mn_base + geom_path(data = data3, (aes(x = Long, y = Lat)), inherit.aes = FALSE)
mn_base <- ggplot(data = mn, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = "gray") +
geom_polygon(color = "black", fill = NA) +
geom_point(data = data1, aes(x = `Long.` , y = `Lat.`, colour = `Total Suspended Solid (TSS)`), inherit.aes = F, size = 3) +
scale_colour_gradientn(colours = topo.colors(10)) +
geom_path(data = df.usa_rivers, aes(x = long, y = lat), color = "lightblue", size = .05)
mn_base + geom_path(data = data3, (aes(x = Long, y = Lat)), inherit.aes = FALSE)
runApp()
